{"version":3,"sources":["components/Resume/References.js","components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","data/resume/degrees.js","data/resume/positions.js","pages/ResumeCalvin.js"],"names":["References","className","id","to","Degree","data","degree","href","link","school","year","Education","map","defaultProps","Job","company","position","daterange","points","point","Experience","job","degrees","positions","sections","ResumeCalvin","Main","title","data-testid","sec","toLowerCase"],"mappings":"8IAceA,IAXI,kBACjB,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,UAAUC,GAAG,eAC5B,qBAAKD,UAAU,QAAf,SACE,cAAC,IAAD,CAAME,GAAG,WAAT,SACE,gF,2CCaOC,G,KAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,yBAASJ,UAAU,mBAAnB,SACE,mCACE,oBAAIA,UAAU,SAAd,SAAwBI,EAAKC,SAC7B,oBAAGL,UAAU,SAAb,UAAsB,mBAAGM,KAAMF,EAAKG,KAAd,SAAqBH,EAAKI,SAAhD,KAA8DJ,EAAKK,eCFnEC,EAAY,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAH,OAChB,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAUC,GAAG,cAC5B,qBAAKD,UAAU,QAAf,SACE,6CAEDI,EAAKO,KAAI,SAACN,GAAD,OACR,cAAC,EAAD,CACED,KAAMC,GACDA,EAAOG,eAepBE,EAAUE,aAAe,CACvBR,KAAM,IAGOM,O,2CCNAG,G,KAxBH,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAH,OACV,0BAASJ,UAAU,iBAAnB,UACE,mCACE,+BAAI,mBAAGM,KAAMF,EAAKG,KAAd,SAAqBH,EAAKU,UAA9B,MAA8CV,EAAKW,YACnD,oBAAGf,UAAU,YAAb,cAA2BI,EAAKY,gBAElC,oBAAIhB,UAAU,SAAd,SACGI,EAAKa,OAAON,KAAI,SAACO,GAAD,OACf,6BAAiBA,GAARA,aCNXC,EAAa,SAAC,GAAD,IAAGf,EAAH,EAAGA,KAAH,OACjB,sBAAKJ,UAAU,aAAf,UACE,qBAAKA,UAAU,UAAUC,GAAG,eAC5B,qBAAKD,UAAU,QAAf,SACE,8CAEDI,EAAKO,KAAI,SAACS,GAAD,OACR,cAAC,EAAD,CACEhB,KAAMgB,GACDA,EAAIN,gBAgBjBK,EAAWP,aAAe,CACxBR,KAAM,IAGOe,O,gGCzBAE,EATC,CACd,CACEb,OAAQ,4BACRH,OAAQ,iDACRE,KAAM,6BACNE,KAAM,2BCwCKa,EA7CG,CAChB,CACER,QAAS,6BACTC,SAAU,oBACVR,KAAM,sCACNS,UAAW,0BACXC,OAAQ,CACN,2IACA,yDACA,oEAGJ,CACEH,QAAS,cACTC,SAAU,oBACVR,KAAM,6BACNS,UAAW,qBACXC,OAAQ,CACN,wFACA,oLAGJ,CACEH,QAAS,6BACTC,SAAU,oBACVR,KAAM,sCACNS,UAAW,yBACXC,OAAQ,CACN,mEACA,6HACA,6DAGJ,CACEH,QAAS,8BACTC,SAAU,gCACVR,KAAM,mFACNS,UAAW,yBACXC,OAAQ,CACN,yHACA,0FCxBAM,EAAW,CACf,YACA,aACA,cA8BaC,UA3BM,kBACnB,cAACC,EAAA,EAAD,CACEC,MAAM,SADR,SAGE,0BAAS1B,UAAU,OAAOC,GAAG,SAA7B,UACE,iCACE,sBAAKD,UAAU,QAAf,UACE,oBAAI2B,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMzB,GAAG,SAAT,sBAC1B,qBAAKF,UAAU,iBAAf,SACGuB,EAASZ,KAAI,SAACiB,GAAD,OACZ,6BACE,mBAAGtB,KAAI,WAAMsB,EAAIC,eAAjB,SAAmCD,KAD5BA,aAOjB,cAAClB,EAAA,EAAD,CAAWN,KAAMiB,IACjB,cAACF,EAAA,EAAD,CAAYf,KAAMkB,IAGlB,cAACvB,EAAA,EAAD","file":"static/js/4.19bd1c13.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","const degrees = [\n  {\n    school: 'Colorado State University',\n    degree: 'B.S. Computer Science and Computer Engineering',\n    link: 'https://www.colostate.edu/',\n    year: '2018 - 2022 (expected)',\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Hewlett-Packard Enterprise',\n    position: 'Software Engineer',\n    link: 'https://www.hpe.com/us/en/home.html',\n    daterange: 'June 2021 - August 2021',\n    points: [\n      'Coded an app which has a React UI to interact with a Django backend that creates a custom Java microservice template forthe Eclipse IDE.',\n      'Dockerized and deployed the app via Jenkins for CI/CD.',\n      'Provided data visualization for KONG API gateway using Grafana.',\n    ],\n  },\n  {\n    company: 'Ebackoffice',\n    position: 'Software Engineer',\n    link: 'https://ebackofficeco.com/',\n    daterange: 'Feb 2021 - Present',\n    points: [\n      'Automated bookkeeping process via Python3 Selenium,reducing 80 percent of their cost.',\n      'Coded an admin panel using Laravel, MySQL and React featuring MVC, relationships, authentication, authorization, validation, event management, calendar, file manager and more.',\n    ],\n  },\n  {\n    company: 'Hewlett-Packard Enterprise',\n    position: 'Software Engineer',\n    link: 'https://www.hpe.com/us/en/home.html',\n    daterange: 'May 2020 - August 2020',\n    points: [\n      'Deployed apps using Docker and Kubernetes through VMs on VMWare.',\n      'Wrote SKILL scripts for Cadence’s Allegro PCB editorto identify and prioritize critical segment-over-void violations.',\n      'Wrote Linux Bash scripts to automatically update driver.',\n    ],\n  },\n  {\n    company: 'Engineering Research Center',\n    position: 'Electrical Engineering Intern',\n    link: 'https://www.engr.colostate.edu/ece/research/research-areas/computer-engineering/',\n    daterange: 'May 2020 - August 2020',\n    points: [\n      'Assembled an A/D Faraday’s box(high frequency filtering) to rectify misalignment of lasers via servo positioning.',\n      'Composed a GUI program connected to Basler pylon cameras in Matlab, C++, Qt creator.',\n    ],\n  },\n];\n\nexport default positions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n// import Skills from '../components/Resume/Skills';\n// import Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\n// import courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n// import { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'References',\n];\n\nconst ResumeCalvin = () => (\n  <Main\n    title=\"Resume\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      {/* <Skills skills={skills} categories={categories} /> */}\n      {/* <Courses data={courses} /> */}\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default ResumeCalvin;\n"],"sourceRoot":""}